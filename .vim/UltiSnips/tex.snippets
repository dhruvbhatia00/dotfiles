global !p
texMathZones = ['texMathZone' + x for x in ['', 'X', 'XX', 'Env', 'EnvStarred', 'Ensured']]
texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

snippet template "Basic template" b
\documentclass{article}

\newcommand{\firstname}{${1:Dhruv}}
\newcommand{\lastname}{${2:Bhatia}}
\newcommand{\email}{${3:dbhatia1@uw.edu}}
\newcommand{\course}{$5}
\newcommand{\type}{${6:Homework}}
\newcommand{\num}{${7:1}}


\usepackage[margin=1in]{geometry}
\usepackage{enumerate}
\usepackage{enumitem}
\usepackage{multicol}
\usepackage{paracol}
\usepackage{tikz, tikz-cd}
\usepackage{float}
\usepackage{subcaption}
\usepackage{xcolor}
\usepackage{amsfonts, amsmath, amsthm, amssymb}
\usepackage[]{mathtools}
\usepackage{pgfplots}
\usepackage{ytableau}
%\usepackage{gensymb}
\usepackage{hyperref}
\hypersetup{colorlinks,
    linkcolor=black,
    citecolor=black,
urlcolor=blue,}
\usepackage{mathpazo}
\usepackage{fancyhdr}
\usepackage{ifthen}
\usepackage{darkmode}
\usepackage{/Users/dhruvbhatia/Desktop/projects/latex/templates/hw-shortcuts}

\lhead{\firstname \hspace{0.1em} \lastname \\\ \texttt{\email}}
\ifthenelse{\equal{\type}{}}
    {\title{\course}
    \rhead{\today \\\ \course}}
    {\title{\course \hspace{0.1em} -- \type \hspace{0.1em} \num}
    \rhead{\today \\\ \course \hspace{0.1em} -- \type \hspace{0.1em} \num}}
\author{\firstname \hspace{0.1em} \lastname}
\pagestyle{fancy}


\let\origtitle\maketitle
\renewcommand{\maketitle}{
    \setlength{\parskip}{0em}
    \origtitle
    \thispagestyle{empty}
    \setlength{\parskip}{1em}}


\usepackage{titlesec}
\titleformat{\section}{\large\sc}{}{0em}{}
\titlespacing{\section}{0em}{0em}{1em}


\usepackage{import}
\usepackage{pdfpages}
\usepackage[]{transparent}

\newcommand{\incfig}[2][1]{%
    \def\svgwidth{#1\columnwidth}
    \import{./figures/}{#2.pdf_tex}
}

\pdfsuppresswarningpagegroup=1

\newcommand{\todo}{\fbox{TO-DO}\ \ }


\theoremstyle{plain}
\newtheorem{Th}{Theorem}[section]
\newtheorem{Lemma}[Th]{Lemma}
\newtheorem{Prop}[Th]{Proposition}
\newtheorem{Claim}[Th]{Claim}
\newtheorem*{Th*}{Theorem}
\newtheorem*{Lemma*}{Lemma}
\newtheorem*{Prop*}{Proposition}
\newtheorem*{Claim*}{Claim}

\theoremstyle{definition}
\newtheorem{Def}[Th]{Definition}
\newtheorem{Conj}[Th]{Conjecture}
\newtheorem{Rem}[Th]{Remark}
\newtheorem{?}[Th]{Problem}
\newtheorem{Ex}[Th]{Example}
\newtheorem{Cor}[Th]{Corollary}
\newtheorem*{Def*}{Definition}
\newtheorem*{Conj*}{Conjecture}
\newtheorem*{Rem*}{Remark}
\newtheorem*{?*}{Problem}
\newtheorem*{Ex*}{Example}
\newtheorem*{Cor*}{Corollary}
\newtheorem*{Question}{Q}
\newtheorem*{Ans}{Ans}

\usepackage[many]{tcolorbox}
\pgfplotsset{compat=1.18}
%\enabledarkmode


\begin{document}
\maketitle

$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
    \centering
    \caption{${2:caption}}
    \label{tab:${3:label}}
    \begin{tabular}{${5:c}}
    $0${5/((?<=.)c|l|r)|./(?1: & )/g}
    \end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
    \centering
    \includegraphics[width=0.8\textwidth]{$2}
    \caption{\centering $3}
    \label{fig:$4}
\end{figure}
endsnippet

context "math()"
snippet tikzcd "Commutative diagrams" bA
\begin{tikzcd}[column sep=35, row sep=35]
    $0
\end{tikzcd}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}[label=${1:\alph}*)]
    \item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
    \item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
    \item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet wlog "wlog" iA
without loss of generality
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" iA
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
    ${1:${VISUAL}}
\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
    if stripped[i] == ')': depth += 1
    if stripped[i] == '(': depth -= 1
    if depth == 0: break;
    i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet restr "function retriction" iA
\restr{$1}{$2}$0
endsnippet

context "math()"
snippet hash "hash operator" iA
\hash
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d|[a-z]|\\)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}$0
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "/ympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet neq "neq" iA
\neq
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil ${1:${VISUAL}} \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor ${1:${VISUAL}} \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet ( "parens ()" iA
($1)$0
endsnippet

context "math()"
snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

context "math()"
snippet lrp "left( right)" iA
\left( ${1:${VISUAL}} \right)$0
endsnippet

context "math()"
snippet lrm "left| right|" iA
\left| ${1:${VISUAL}} \right|$0
endsnippet

context "math()"
snippet lrc "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

context "math()"
snippet lrs "left[ right]" iA
\left[ ${1:${VISUAL}} \right]$0
endsnippet

context "math()"
snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet \tot "textarrow" iA
\xrightarrow[$1]{$2}$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{${1:i=1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet leq "leq" iA
\leq
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet geq "geq" iA
\geq
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet aff "affine" iA
\mathbb{A}^{$0}
endsnippet

context "math()"
snippet PP "proj" iA
\mathbb{P}^{$0}
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
    \centering
    \begin{tikzpicture}
        \begin{axis}[
            xmin= ${2:-10}, xmax= ${3:10},
            ymin= ${4:-10}, ymax = ${5:10},
            axis lines = middle,
        ]
            \addplot[domain=$2:$3, samples=${6:100}]{$7};
        \end{axis}
    \end{tikzpicture}
    \caption{$8}
    \label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet mfrac "mathfrac" iA
\mathfrak{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

context "math()"
snippet dash "dashrightarrow" iA
\dashto
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\}$0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet

context "math()"
snippet contains "supset" iA
\supseteq
endsnippet

context "math()"
snippet cc "subset" Ai
\subseteq 
endsnippet

context "math()"
snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cpp" iA
\cup 
endsnippet

context "math()"
snippet scup "sqcup" iA
\sqcup
endsnippet

context "math()"
snippet bqcup "bigsqcup" iA
\bigsqcup
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "structure sheaf" iA
\O
endsnippet

snippet RR "real" iA
\R
endsnippet

snippet BB "ball" iA
\B
endsnippet

snippet PP "projective" iA
\mathbb{P}
endsnippet

snippet QQ "Q" iA
\Q
endsnippet

snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet CC "C" iA
\C
endsnippet

snippet <! "normal" iA
\triangleleft 
endsnippet

snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
    $1: $2 &\longrightarrow $3 \\\\
    $4 &\longmapsto $1($4) = $0
\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet tilde "tilde" iA
\tilde{$1}$0
endsnippet

context "math()"
snippet "dot" "dot" riA
\dot{$1}$0
endsnippet

context "math()"
snippet "arw" "arw" riA
\overrightarrow{$1}$0
endsnippet


snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet today "Date"
`date +%F`
endsnippet

snippet invoice "template"
\documentclass[
	a4paper, % Paper size, use 'a4paper' for A4 or 'letterpaper' for US letter
	10pt, % Default font size, available sizes are: 8pt, 9pt, 10pt, 11pt, 12pt, 14pt, 17pt and 20pt
]{/Users/dhruvbhatia/Desktop/projects/latex/templates/CSMinimalInvoice}

%---------------------------------------------------------------------------------
%	INVOICE SETTINGS
%---------------------------------------------------------------------------------

% The tax rate for automatically calculating tax, do one of the following:
% 1) Leave command empty (i.e. \taxrate{}) for no tax and no before tax and total tax lines at the bottom of the invoice
% 2) Enter 0 (i.e. \taxrate{0}) for no tax but before tax and total tax lines explicitly saying 0% tax are output at the bottom of the invoice
% 3) Enter a whole number (with or without a decimal) to calculate tax and output before tax and total tax lines at the bottom of the invoice, e.g. \taxrate{10} = 10% tax and \taxrate{15.5} = 15.5% tax
\taxrate{}

% The currency code (e.g. USD is United States Dollars), do one of the following:
% 1) Enter a 3 letter code to have it appear at the bottom of the invoice
% 2) Leave the command empty (i.e. \currencycode{}) if you don't want the code to appear on the invoice
\currencycode{USD}

% The default currency symbol for the invoice is the dollar sign, if you would like to change this, do one of the following:
% 1) Uncomment the line below and enter one of the following currency codes to change it to the corresponding symbol for that currency: GBP, CNY, JPY, EUR, BRL or INR
%\determinecurrencysymbol{GBP}
% 2) Uncomment the line below and leave it blank for no currency symbol or use another character/symbol for your currency
%\renewcommand{\currencysymbol}{}

% The invoice number, do one of the following:
% 1) Enter an invoice number, it may include any text you'd like such as '13-A'
% 2) Leave command empty (i.e. \invoicenumber{}) and no invoice number will be output in the invoice
\invoicenumber{${1:1}}

%---------------------------------------------------------------------------------
%	ADVANCED INVOICE SETTINGS
%---------------------------------------------------------------------------------

\roundcurrencytodecimals{2} % The number of decimal places to round currency numbers
\roundquantitytodecimals{2} % The number of decimal places to round quantity numbers

% Advanced settings for changing how numbers are output
\sisetup{group-minimum-digits=4} % Delimit numbers (e.g. 4000 -> 4,000) when there are this number of digits or more
\sisetup{group-separator={,}} % Character to use for delimiting digit groups
\sisetup{output-decimal-marker={.}} % Character to use for specifying decimals

\currencysuffix{} % Some currencies output the currency symbol after the number, such as Sweden's krona specified with a 'kr' suffix. Specify a suffix here if required, otherwise leave this command empty.

%---------------------------------------------------------------------------------

\begin{document}

\setstretch{1.2} % Increase line spacing

%---------------------------------------------------------------------------------
%	INVOICE HEADER
%---------------------------------------------------------------------------------

\outputheader{Invoice}{${2:\today}} % Output the invoice title (automatically all caps) and date (can be empty if not needed)

%---------------------------------------------------------------------------------
%	INVOICE AND PAYER INFORMATION
%---------------------------------------------------------------------------------

\outputinvoicenum % Output the invoice number if one has been set

% Invoice information section
\begin{minipage}[t]{0.38\textwidth}
	\textbf{Due:} ${3:\duedatedays{7}} % Use the \duedatedays{<number>} command to automatically determine the date when the invoice is due using the number of days from today in the single parameter to the command, or remove it and enter a due date manually
	
	\textbf{Project:} Math Tutoring % Project name
	
	\textbf{Description:} Zoom tutoring in $4 
\end{minipage}
% Fixed minimum horizontal whitespace between sections
\begin{minipage}[t]{0.03\textwidth}
	~ % Populate the minipage with a dummy space so it is spaced correctly
\end{minipage}
% Payee information section
\begin{minipage}[t]{0.56\textwidth}
	\textbf{${5:Dhruv Bhatia}} \\\ % Payer name 
	\href{mailto:${6:dbhatia1@uw.edu}}{Email: $6} \\\ % Payer email
    Phone: $7
\end{minipage}

%---------------------------------------------------------------------------------

\setstretch{1} % Restore single line spacing

\vfill % Vertical alignment whitespace

%---------------------------------------------------------------------------------
%	INVOICE ITEMS TABLE
%---------------------------------------------------------------------------------

% Use the \invoiceitem command to output invoice items. It requires 4 parameters described below:
% 1) Item description; this should be kept reasonably short so as not to span too many lines
% 2) Item quantity (or hours); this should be a positive number (with no commas or other symbols) and decimals are allowed
% 3) Item unit price (or hourly rate); this should be a positive or negative number (with no commas or other symbols) and decimals are allowed
% 4) Item note; this can be left empty but, if used, it should be kept very short

\begin{invoicetable}
	\invoiceitem{Session on $0}{1}{100}{}
\end{invoicetable}

%---------------------------------------------------------------------------------

\vfill\vfill % Vertical alignment whitespace

%---------------------------------------------------------------------------------
%	INVOICE CONDITIONS
%---------------------------------------------------------------------------------

\invoiceconditions{} % Leave command empty (i.e. \invoiceconditions{}) if not required

%---------------------------------------------------------------------------------
%	MERCHANT (YOUR) INFORMATION
%---------------------------------------------------------------------------------

% Company/individual name and address section
\begin{minipage}[t]{0.3\textwidth}
	\itshape % Italic text
	
	\textbf{Dhruv Bhatia} % Company/individual name
	
	5000 25th Ave NE \\\ % Merchant address lines
    Apt 6202-C \\\
	Seattle, WA 98105 \\\
	United States \\\
\end{minipage}
% Fixed minimum horizontal whitespace between sections
\begin{minipage}[t]{0.03\textwidth}
	~ % Populate the minipage with a dummy space so it is spaced correctly
\end{minipage}
% Merchant contact information section
\begin{minipage}[t]{0.3\textwidth}
	\itshape % Italic text
	
	\textbf{Contact}

	 % Merchant contact information lines
	\href{mailto:dbhatia1@uw.edu}{dbhatia1@uw.edu} \\\
    Phone: 401-450-8617

\end{minipage}
% Fixed minimum horizontal whitespace between sections
\begin{minipage}[t]{0.03\textwidth}
	~ % Populate the minipage with a dummy space so it is spaced correctly
\end{minipage}
% Merchant payment information
\begin{minipage}[t]{0.3\textwidth}
	\itshape % Italic text
	
	\textbf{Payment}
	
	Bank of America \\\ % Payment information lines
	Routing \#: 011500010 \\\
	Account \#: 394008815233 \\\
\end{minipage}

%---------------------------------------------------------------------------------

\end{document}

endsnippet

# vim:ft=snippets
